
'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, 
the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.
'''


def fib(a, b):
    '''
    Generate the next Fiboncci number, give the previous two numbers.
    '''
    c = a + b
    return c

def is_even(num):
    # Is the number even?
    return num % 2 == 0




##########################################################################################

# Starting values for the Fiboncci sequence
a = 0
b = 1

max = 4000_000
sum = 0
while b < max :
    a, b = b, fib(a, b)
    if b > max:
        break
    
    # debugging
    if b < 10 :
        print(b) 

    if is_even(b):
        sum += b

    
print("Euler 2 solution : {}".format(sum))

